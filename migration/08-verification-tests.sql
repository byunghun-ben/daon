-- ===============================================
-- 8Îã®Í≥Ñ: ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò Í≤ÄÏ¶ù ÌÖåÏä§Ìä∏
-- ===============================================
-- ÏÉàÎ°úÏö¥ Supabase ÌîÑÎ°úÏ†ùÌä∏ÏóêÏÑú Ïã§ÌñâÌï† Í≤ÄÏ¶ù ÌÖåÏä§Ìä∏ Ïä§ÌÅ¨Î¶ΩÌä∏

-- ===============================================
-- 1. Ïä§ÌÇ§Îßà Í≤ÄÏ¶ù
-- ===============================================

-- Î™®Îì† ÌÖåÏù¥Î∏îÏù¥ Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏
SELECT 
    table_name,
    CASE 
        WHEN table_name IN (
            'users', 'children', 'child_guardians', 'activities', 
            'diary_entries', 'milestones', 'growth_records', 'oauth_states'
        ) THEN '‚úÖ Found'
        ELSE '‚ùå Missing'
    END AS status
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_name IN (
    'users', 'children', 'child_guardians', 'activities', 
    'diary_entries', 'milestones', 'growth_records', 'oauth_states'
)
ORDER BY table_name;

-- ÌïÑÏàò Ïª¨Îüº ÌôïÏù∏
SELECT 
    t.table_name,
    t.column_name,
    t.data_type,
    t.is_nullable,
    t.column_default
FROM information_schema.columns t
WHERE t.table_schema = 'public'
AND t.table_name IN (
    'users', 'children', 'child_guardians', 'activities', 
    'diary_entries', 'milestones', 'growth_records', 'oauth_states'
)
ORDER BY t.table_name, t.ordinal_position;

-- ===============================================
-- 2. Ï†úÏïΩ Ï°∞Í±¥ Í≤ÄÏ¶ù
-- ===============================================

-- Í∏∞Î≥∏ ÌÇ§ ÌôïÏù∏
SELECT 
    tc.table_name,
    tc.constraint_name,
    tc.constraint_type,
    kcu.column_name
FROM information_schema.table_constraints tc
JOIN information_schema.key_column_usage kcu 
    ON tc.constraint_name = kcu.constraint_name
WHERE tc.table_schema = 'public'
AND tc.constraint_type = 'PRIMARY KEY'
ORDER BY tc.table_name;

-- Ïô∏Îûò ÌÇ§ ÌôïÏù∏
SELECT 
    tc.table_name,
    tc.constraint_name,
    kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
FROM information_schema.table_constraints tc
JOIN information_schema.key_column_usage kcu 
    ON tc.constraint_name = kcu.constraint_name
JOIN information_schema.constraint_column_usage ccu 
    ON ccu.constraint_name = tc.constraint_name
WHERE tc.table_schema = 'public'
AND tc.constraint_type = 'FOREIGN KEY'
ORDER BY tc.table_name;

-- Ï≤¥ÌÅ¨ Ï†úÏïΩ Ï°∞Í±¥ ÌôïÏù∏
SELECT 
    tc.table_name,
    tc.constraint_name,
    cc.check_clause
FROM information_schema.table_constraints tc
JOIN information_schema.check_constraints cc 
    ON tc.constraint_name = cc.constraint_name
WHERE tc.table_schema = 'public'
AND tc.constraint_type = 'CHECK'
ORDER BY tc.table_name;

-- ===============================================
-- 3. Ïù∏Îç±Ïä§ Í≤ÄÏ¶ù
-- ===============================================

-- Ïù∏Îç±Ïä§ Î™©Î°ù ÌôïÏù∏
SELECT 
    schemaname,
    tablename,
    indexname,
    indexdef
FROM pg_indexes 
WHERE schemaname = 'public'
ORDER BY tablename, indexname;

-- ===============================================
-- 4. RLS Ï†ïÏ±Ö Í≤ÄÏ¶ù
-- ===============================================

-- RLS ÌôúÏÑ±Ìôî ÏÉÅÌÉú ÌôïÏù∏
SELECT 
    tablename,
    rowsecurity,
    CASE 
        WHEN rowsecurity THEN '‚úÖ Enabled'
        ELSE '‚ùå Disabled'
    END AS rls_status
FROM pg_tables 
WHERE schemaname = 'public'
ORDER BY tablename;

-- RLS Ï†ïÏ±Ö Î™©Î°ù ÌôïÏù∏
SELECT 
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd
FROM pg_policies 
WHERE schemaname = 'public'
ORDER BY tablename, policyname;

-- ===============================================
-- 5. Ìï®Ïàò Î∞è Ìä∏Î¶¨Í±∞ Í≤ÄÏ¶ù
-- ===============================================

-- ÏÇ¨Ïö©Ïûê Ï†ïÏùò Ìï®Ïàò ÌôïÏù∏
SELECT 
    routine_name,
    routine_type,
    data_type
FROM information_schema.routines
WHERE routine_schema = 'public'
ORDER BY routine_name;

-- Ìä∏Î¶¨Í±∞ ÌôïÏù∏
SELECT 
    trigger_name,
    event_manipulation,
    event_object_table,
    action_timing,
    action_statement
FROM information_schema.triggers
WHERE trigger_schema = 'public'
ORDER BY event_object_table, trigger_name;

-- ===============================================
-- 6. ÌôïÏû• Í∏∞Îä• Í≤ÄÏ¶ù
-- ===============================================

-- ÏÑ§ÏπòÎêú ÌôïÏû• Í∏∞Îä• ÌôïÏù∏
SELECT 
    e.extname AS extension_name,
    n.nspname AS schema_name,
    e.extversion AS version,
    CASE 
        WHEN e.extname IN ('uuid-ossp', 'pgcrypto', 'pg_stat_statements') THEN '‚úÖ Required'
        ELSE 'üì¶ Optional'
    END AS requirement_status
FROM pg_extension e
JOIN pg_namespace n ON e.extnamespace = n.oid
ORDER BY requirement_status DESC, e.extname;

-- ===============================================
-- 7. Îç∞Ïù¥ÌÑ∞ Î¨¥Í≤∞ÏÑ± Í≤ÄÏ¶ù
-- ===============================================

-- ÌÖåÏù¥Î∏îÎ≥Ñ Î†àÏΩîÎìú Ïàò ÌôïÏù∏
SELECT 
    schemaname,
    tablename,
    n_tup_ins AS inserts,
    n_tup_upd AS updates,
    n_tup_del AS deletes,
    n_live_tup AS live_rows,
    n_dead_tup AS dead_rows
FROM pg_stat_user_tables 
WHERE schemaname = 'public'
ORDER BY tablename;

-- Ïô∏Îûò ÌÇ§ Î¨¥Í≤∞ÏÑ± Í≤ÄÏ¶ù
WITH integrity_checks AS (
    -- usersÏôÄ children Í¥ÄÍ≥Ñ
    SELECT 'children -> users' AS check_name,
           COUNT(*) AS violation_count
    FROM children c
    LEFT JOIN users u ON c.owner_id = u.id
    WHERE u.id IS NULL
    
    UNION ALL
    
    -- child_guardiansÏôÄ children Í¥ÄÍ≥Ñ
    SELECT 'child_guardians -> children' AS check_name,
           COUNT(*) AS violation_count
    FROM child_guardians cg
    LEFT JOIN children c ON cg.child_id = c.id
    WHERE c.id IS NULL
    
    UNION ALL
    
    -- child_guardiansÏôÄ users Í¥ÄÍ≥Ñ
    SELECT 'child_guardians -> users' AS check_name,
           COUNT(*) AS violation_count
    FROM child_guardians cg
    LEFT JOIN users u ON cg.user_id = u.id
    WHERE u.id IS NULL
    
    UNION ALL
    
    -- activitiesÏôÄ children Í¥ÄÍ≥Ñ
    SELECT 'activities -> children' AS check_name,
           COUNT(*) AS violation_count
    FROM activities a
    LEFT JOIN children c ON a.child_id = c.id
    WHERE c.id IS NULL
    
    UNION ALL
    
    -- activitiesÏôÄ users Í¥ÄÍ≥Ñ
    SELECT 'activities -> users' AS check_name,
           COUNT(*) AS violation_count
    FROM activities a
    LEFT JOIN users u ON a.user_id = u.id
    WHERE u.id IS NULL
)
SELECT 
    check_name,
    violation_count,
    CASE 
        WHEN violation_count = 0 THEN '‚úÖ Valid'
        ELSE '‚ùå Violations found'
    END AS status
FROM integrity_checks
ORDER BY violation_count DESC, check_name;

-- ===============================================
-- 8. Í∂åÌïú Í≤ÄÏ¶ù
-- ===============================================

-- ÌÖåÏù¥Î∏î Í∂åÌïú ÌôïÏù∏
SELECT 
    grantee,
    table_name,
    privilege_type,
    is_grantable
FROM information_schema.table_privileges 
WHERE table_schema = 'public'
AND grantee != 'postgres'
ORDER BY table_name, grantee, privilege_type;

-- ===============================================
-- 9. ÏÑ±Îä• Í∏∞Ï§ÄÏÑ† Ï∏°Ï†ï
-- ===============================================

-- Í∞ÑÎã®Ìïú ÏøºÎ¶¨ ÏÑ±Îä• ÌÖåÏä§Ìä∏
EXPLAIN ANALYZE
SELECT COUNT(*) FROM users;

EXPLAIN ANALYZE
SELECT COUNT(*) FROM children;

EXPLAIN ANALYZE
SELECT c.name, u.name as owner_name
FROM children c
JOIN users u ON c.owner_id = u.id
LIMIT 10;

-- ===============================================
-- 10. Í∏∞Îä• ÌÖåÏä§Ìä∏
-- ===============================================

-- UUID ÏÉùÏÑ± Í∏∞Îä• ÌÖåÏä§Ìä∏
SELECT 
    uuid_generate_v4() AS generated_uuid,
    CASE 
        WHEN uuid_generate_v4() ~ '^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$' 
        THEN '‚úÖ Valid UUID v4'
        ELSE '‚ùå Invalid UUID'
    END AS uuid_test;

-- ÏïîÌò∏Ìôî Í∏∞Îä• ÌÖåÏä§Ìä∏
SELECT 
    crypt('test_password', gen_salt('bf')) AS hashed_password,
    crypt('test_password', crypt('test_password', gen_salt('bf'))) = crypt('test_password', gen_salt('bf')) AS crypto_test;

-- ÏãúÍ∞ÑÎåÄ ÏÑ§Ï†ï ÌôïÏù∏
SELECT 
    name,
    setting,
    CASE 
        WHEN name = 'timezone' AND setting = 'UTC' THEN '‚úÖ Correct'
        WHEN name = 'timezone' THEN '‚ö†Ô∏è Check timezone'
        ELSE 'üìù Info'
    END AS status
FROM pg_settings 
WHERE name IN ('timezone', 'log_timezone')
ORDER BY name;

-- ===============================================
-- 11. Ï¢ÖÌï© ÏÉÅÌÉú Î¶¨Ìè¨Ìä∏
-- ===============================================

WITH migration_status AS (
    SELECT 'Tables' AS component, 
           COUNT(*) AS expected_count,
           COUNT(*) AS actual_count,
           CASE WHEN COUNT(*) = 8 THEN '‚úÖ' ELSE '‚ùå' END AS status
    FROM information_schema.tables 
    WHERE table_schema = 'public' 
    AND table_name IN (
        'users', 'children', 'child_guardians', 'activities', 
        'diary_entries', 'milestones', 'growth_records', 'oauth_states'
    )
    
    UNION ALL
    
    SELECT 'RLS Policies' AS component,
           20 AS expected_count, -- ÏòàÏÉÅ Ï†ïÏ±Ö Ïàò
           COUNT(*) AS actual_count,
           CASE WHEN COUNT(*) >= 20 THEN '‚úÖ' ELSE '‚ùå' END AS status
    FROM pg_policies 
    WHERE schemaname = 'public'
    
    UNION ALL
    
    SELECT 'Functions' AS component,
           4 AS expected_count, -- ÏòàÏÉÅ Ìï®Ïàò Ïàò
           COUNT(*) AS actual_count,
           CASE WHEN COUNT(*) >= 4 THEN '‚úÖ' ELSE '‚ùå' END AS status
    FROM information_schema.routines
    WHERE routine_schema = 'public'
    
    UNION ALL
    
    SELECT 'Triggers' AS component,
           5 AS expected_count, -- ÏòàÏÉÅ Ìä∏Î¶¨Í±∞ Ïàò
           COUNT(*) AS actual_count,
           CASE WHEN COUNT(*) >= 5 THEN '‚úÖ' ELSE '‚ùå' END AS status
    FROM information_schema.triggers
    WHERE trigger_schema = 'public'
)
SELECT 
    component,
    expected_count,
    actual_count,
    status,
    CASE 
        WHEN status = '‚úÖ' THEN 'Migration successful'
        ELSE 'Needs attention'
    END AS result
FROM migration_status
ORDER BY 
    CASE WHEN status = '‚úÖ' THEN 1 ELSE 0 END,
    component;

-- ===============================================
-- Ïã§Ìñâ Í≤∞Í≥º Ìï¥ÏÑù
-- ===============================================

/*
‚úÖ ÏÑ±Í≥µ ÏßÄÌëú:
- Î™®Îì† ÌÖåÏù¥Î∏îÏù¥ Ï°¥Ïû¨Ìï®
- RLSÍ∞Ä Î™®Îì† ÌÖåÏù¥Î∏îÏóêÏÑú ÌôúÏÑ±ÌôîÎê®
- Î™®Îì† Ï†úÏïΩ Ï°∞Í±¥Ïù¥ Ïò¨Î∞îÎ•¥Í≤å ÏÑ§Ï†ïÎê®
- Ïô∏Îûò ÌÇ§ Î¨¥Í≤∞ÏÑ± ÏúÑÎ∞ò ÏóÜÏùå
- ÌïÑÏàò ÌôïÏû• Í∏∞Îä•Ïù¥ ÏÑ§ÏπòÎê®

‚ùå Ïã§Ìå® ÏßÄÌëú:
- ÎàÑÎùΩÎêú ÌÖåÏù¥Î∏îÏù¥ÎÇò Ïª¨Îüº
- RLS Ï†ïÏ±Ö ÎàÑÎùΩ
- Ïô∏Îûò ÌÇ§ Î¨¥Í≤∞ÏÑ± ÏúÑÎ∞ò
- ÌïÑÏàò ÌôïÏû• Í∏∞Îä• ÎàÑÎùΩ

‚ö†Ô∏è Ï£ºÏùò ÏßÄÌëú:
- ÏòàÏÉÅÍ≥º Îã§Î•∏ Î†àÏΩîÎìú Ïàò
- ÏÑ±Îä• Ïù¥Ïäà
- Í∂åÌïú ÏÑ§Ï†ï Î¨∏Ï†ú

Îã§Ïùå Îã®Í≥Ñ:
1. Ïã§Ìå®Ìïú Ìï≠Î™©Îì§ÏùÑ ÏàòÏ†ï
2. Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Î†àÎ≤®ÏóêÏÑú Í∏∞Îä• ÌÖåÏä§Ìä∏
3. Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞Î°ú ÌÜµÌï© ÌÖåÏä§Ìä∏
4. ÏÑ±Îä• Î™®ÎãàÌÑ∞ÎßÅ ÏÑ§Ï†ï
*/